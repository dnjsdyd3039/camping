<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.camily.dao.CampingShopDao" >

 <!-- 캠핑 용품 상세 페이지 이동 요청 (SELECT) -->
 <select id="campingDetail" resultType="com.camily.dto.GoodsDto">
  SELECT* 
  FROM GOODS
  WHERE GCODE = #{gcode}
 </select>
 
 <!-- 캠핑용품 검색 기능 -->
 <select id="searchShop" resultType="com.camily.dto.GoodsDto">
  SELECT*
  FROM GOODS
  WHERE GNAME LIKE '%'||#{search}||'%'
 </select>
  
 <!-- 캠핑 구매 요청 페이지 이동요청 (SELECT) B -->
 <select id="campingpurchase" resultType="com.camily.dto.GoodsDto">
   SELECT* 
   FROM GOODS
   WHERE GCODE = #{gcode}
 </select>
  
 <!-- 구매 요청 페이지 이동하기 전에 세션 아이디를 이용해서 주소 찾기 ( 위에거 연장선 ) (SELECT) B -->
 <select id="addselect" resultType="com.camily.dto.MemberDto">
   SELECT*
   FROM MEMBERS
   WHERE MID = #{loginId}
 </select>
 
 <!-- 구매 코드 최대값 생성 (SELECT) C -->
 <select id="MaxGocode" resultType="String">
   SELECT MAX(GOCODE) 
   FROM GOODSORDER
 </select>
 
 <!-- 캠핑 용품 구매하기 구매 코드 생성한거 가지고 사용함 (INSERT) C -->
 <insert id="goodsPurchase">
   INSERT INTO GOODSORDER(GOCODE, GOMID, GOMADDR, GOGCODE, GOAMOUNT, GOPRICE, GONAME, GOIMAGE, GOSTATE, GODATE)
   VALUES(#{gocode}, #{loginId}, #{addr}, #{gogcode}, #{gamount}, #{totalPrice}, #{gname}, #{gimage}, 0, SYSDATE)
 </insert>
 
 <!-- 구매내역 보기 (SELECT) 페이징 처리 -->
 <select id="PurchaseList" resultType="com.camily.dto.GoodsOrderDto">
 	SELECT * 
	FROM (	SELECT ROWNUM RN, GOODSORDER.*
	      		FROM (	SELECT * 
	            			FROM GOODSORDER 
	            			ORDER BY GODATE DESC) GOODSORDER
	      		WHERE GOMID = #{loginId})
	WHERE GOSTATE = 0
	AND RN BETWEEN #{startRow} AND #{endRow}
 </select>
 
 <!-- 캠핑 용품 (SELECT) AA -->
 <select id="getCampingInfo" resultType="com.camily.dto.GoodsDto">
  SELECT*
  FROM GOODS
  WHERE GCODE = #{gcode}
 </select>

 <!-- 찜클릭 state값 증가 ajax (INSERT) 캠핑용품에서 필요한 값 가져 온것 AA -->
 <insert id="cartInsert">
   INSERT INTO GOODSORDER(GOCODE, GOMID, GOGCODE, GOPRICE, GONAME, GOIMAGE, GOAMOUNT, GOSTATE)
   VALUES(#{gocode}, #{loginId}, #{gcode}, #{gorice}, #{goname}, #{goimage}, 1, 1)
 </insert>
 
 <!-- 찜목록 보기 (SELECT) -->
 <select id="cartselect" resultType="com.camily.dto.GoodsOrderDto">
  SELECT*
  FROM GOODSORDER
  WHERE GOMID = #{loginId} AND GOSTATE = 1
 </select>
 
 <!-- 찜삭제 (DELETE) -->
 <delete id="calldibs">
  DELETE FROM GOODSORDER
  WHERE GOMID = #{loginId} AND GOCODE = #{gocode} AND GOSTATE = 1
 </delete>
 
 
 <!-- 장바구니 추가하기 전 장바구니 안에 같은 물건이 있는지 없는지 아이디로 확인 (SELECT) ZZ -->
 <select id="selectdto" resultType="com.camily.dto.CampingDetailInformationDto">
  SELECT*
  FROM DETAILINFORMATION
  WHERE DICODE = #{dicode} AND DIMID = #{loginId}
 </select>
 
 <!-- 값이 없으면 장바구니 추가 (INSERT) ZZ -->
 <insert id="insertinformation">
  INSERT INTO DETAILINFORMATION(DIMID, DICODE, DINAME, DIIMAGE, DIAMOUNT, DIADDR, DIPRICE, DITOTALPRICE)
  VALUES(#{loginId}, #{dicode}, #{diname}, #{diimage}, #{diamount}, #{diaddr}, #{diprice}, #{ditotalprice}) 
 </insert>
  
 <!-- 값이 있으면 해당하는 상품이 있으니까 수량만 늘려줌 (UPDATE) ZZ -->
 <update id="update">
  UPDATE DETAILINFORMATION SET DIAMOUNT = #{diamount} + #{old}
  WHERE DIMID = #{loginId} 
 </update>
  
 <!-- 장바구니 목록 페이지 출력 (SELECT) -->
 <select id="detailinformation" resultType="com.camily.dto.CampingDetailInformationDto">
  SELECT*
  FROM DETAILINFORMATION
  WHERE DIMID = #{loginId} 
 </select>
  
 <!-- 장바구니 들어 있는 모든 값 (INSERT) -->
 <insert id="totalpurchase">
  INSERT INTO GOODSORDER(GOCODE, GOMID, GOMADDR, GOGCODE, GOAMOUNT, GOPRICE, GONAME, GOIMAGE, GOSTATE, GODATE)
  VALUES(#{gocode}, #{gomid}, #{gomaddr}, #{gogcode}, #{goamount}, #{goprice}, #{goname}, #{goimage}, 0, SYSDATE)
 </insert>
 
 <!-- 장바구니 삭제 (DELETE) -->
 <delete id="deletepoket">
  DELETE FROM DETAILINFORMATION
  WHERE DICODE = #{dicode}
 </delete>
 
 <!-- 구매목록 삭제하기 dao 호출 ajax (DELETE) -->
 <delete id="deleteph">
  DELETE FROM GOODSORDER
  WHERE GOCODE = #{gocode}
 </delete>
  
</mapper>

    




 
  